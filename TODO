first
 [ ] stabilize what I have
 [ ] add Summary typeclass
 [ ] add Cache typeclass

next
 [ ] build workflow datastructure: a directed graph of nodes
 [ ] each node holds a computation
 [ ] the node can be in one of two states, pass or fail
 [ ] messages are stored as Error, Warning, Message, Log
 [ ] each datum is a member of class Summary
 [ ] each datum is a member of class Cache
 [ ] the summary of each datum is stored
 [ ] the output can be flagged as TEMP, INTER, or FINAL
     - if TEMP, the value is not saved, only a summary of it
     - if INTER, the value is saved as a file in the temp directory
     - if FINAL, the value is saved as a file in the FINAL directory


Build a graph

Sweep through it once to perform all calculations, transforming stored
functions into references to files, stored messages and summaries.

Sweep through a second time verifying state (this time values across nodes can be compared.

Sweep a third time to prepare the final report

Sweep a fourth time to delete temporary files, remove intermediate data,
organize final data, prep and store all materia.
